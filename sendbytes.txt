   10 rem read and output file
   20 rem open rs232 first because this actually erases all basic variables.
   30 rem open rs232 at 1200 baud
   40 open2,2,4,chr$(8)+chr$(0)
   50 get#2,s$ :rem turn on receiver
   60 open 15,9,15:rem disk cmd channel
   70 print"enter file name. default:example":input f$
   80 if f$="" then f$="example"
   90 print "file: ";f$
  300 rem msg type, 1=start,2=cont
  310 mt=1  :rem msg type
  320 eo=0  :rem used to hold status
  330 en=0  :rem error number if error
  340 nb=0  :rem num bytes to send
  350 mx=8  :rem max bytes, must be <8
  360 dim bytes$(mx)
  370 br=0  :rem bytes read from file
  380 cs=0  :rem checksum
  390 cu=0  :rem upper byte checksum
  400 cl=0  :rem lower byte checksum
  410 b0=0  :rem repl addr lo byte w/this
  420 b1=0  :rem repl addr hi byte w/this
  425 ba=0  :rem repl addr full addr
  430 ra$="":rem repl addr input
  445 print:print"are you sending an assembled"
  446 print"program and want to override"
  447 print"the start address? [y/n]":input ra$
  455 if ra$<>"y" goto 500
  456 print"new start address lo byte (int)":input b0
  457 print"new start address hi byte (int)":input b1
  460 ba=b1 * 256 + b0
  465 print"byte 0: ";b0;", byte 1: ";b1;", full addr: ";ba
  470 print"proceed with this addr [y/n]":input ra$
  475 if ra$<>"y" goto 49980
  500 rem open file to be sent
  510 open5,9,8,"0:"+f$+",p,r"
  520 gosub 59980 :rem check for errors
  530 if en>1 goto 49980
  540 get#5,b$:rem read a byte
  550 eo=st
  560 br=br+1
  561 rem repl address if user wanted to
  562 if br=1 and ra$="y" then b$=chr$(b0)
  564 if br=2 and ra$="y" then b$=chr$(b1)
  570 if b$="" then b$=chr$(0)
  580 bytes$(nb)=b$
  590 nb=nb+1
  600 cs=cs+asc(b$)
  610 rem if we filled array, send bytes
  620 if nb>=mx then gosub 1000
  630 rem if not eof, keep going
  640 if eo<>64 goto 540
  650 rem send any remaining bytes
  660 if nb>0 then gosub 1000
  665 print""
  670 print "send complete"
  680 goto 49980 :rem end prog
 1000 rem send bytes
 1010 gosub 3000
 1035 mh=mt*2^5+nb
 1040 rem send header
 1050 print#2,chr$(mh);
 1080 rem send checksum lo byte
 1090 print#2,chr$(cl);
 1100 rem send checksum hi byte
 1110 print#2,chr$(cu);
 1120 for b=0 to nb-1
 1130 print "W";
 1140 print#2,bytes$(b);:rem send byte
 1150 next b
 1160 rem wait until all bytes sent
 1170 if (peek(673)and1)then 1170
 1175 print "Q";
 1180 nb=0
 1200 cs=0
 1210 cu=0
 1220 cl=0
 1230 mt=2 :rem we already sent first
 1240 return
 3000 rem calculate checksum
 3010 rem only works up to 12 bits
 3020 rem 1s complement
 3030 cs=(cs+4095)-2*(cs and 4095)
 3040 cu=cs/256
 3050 cl=cs and 255
 3070 return
49980 rem exit cleanly
49990 print"closing rs232 and file"
50000 close15:close5
50010 end
59980 rem read error channel
59990 input#15,en,em$,et,es
60000 if en>1 then print en,em$,et,es
60010 return
